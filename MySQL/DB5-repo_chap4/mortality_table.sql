-- QUERY SET #3: AGE/DATE MANIPULATION
ALTER TABLE MORT_FINAL_2 ADD COLUMN Age_years REAL;

UPDATE MORT_FINAL_2
SET Age_years = ROUND((DATEDIFF(Visit_date, Bdate)) / 365.25, 2);

-- QUERY SET #4: BINNING DIAGNOSES FOR CHF
ALTER TABLE MORT_FINAL_2 ADD COLUMN Chf_dx INTEGER DEFAULT 0;
UPDATE MORT_FINAL_2 SET Chf_dx = 1 WHERE Pri_dx_icd = 'I50.9' OR Sec_dx_icd = 'I50.9';

-- QUERY SET #4B: BINNING DIAGNOSES FOR OTHERS
ALTER TABLE MORT_FINAL_2 ADD COLUMN Htn_dx INTEGER DEFAULT 0;
UPDATE MORT_FINAL_2 SET Htn_dx = 1 WHERE Pri_dx_icd = 'I10' OR Sec_dx_icd = 'I10';

ALTER TABLE MORT_FINAL_2 ADD COLUMN Angina_dx INTEGER DEFAULT 0;
UPDATE MORT_FINAL_2 SET Angina_dx = 1 WHERE Pri_dx_icd = 'I20.9' OR Sec_dx_icd = 'I20.9';

ALTER TABLE MORT_FINAL_2 ADD COLUMN Diab_dx INTEGER DEFAULT 0;
UPDATE MORT_FINAL_2 SET Diab_dx = 1 WHERE Pri_dx_icd = 'E11.9' OR Sec_dx_icd = 'E11.9';

ALTER TABLE MORT_FINAL_2 ADD COLUMN Pulm_htn_dx INTEGER DEFAULT 0;
UPDATE MORT_FINAL_2 SET Pulm_htn_dx = 1 WHERE Pri_dx_icd = 'I27.0' OR Sec_dx_icd = 'I27.0';

-- QUERY SET #4C: AGGREGATING CARDIAC DX, METHOD 1
ALTER TABLE MORT_FINAL_2 ADD COLUMN Num_cardiac_dx INTEGER;
UPDATE MORT_FINAL_2 SET Num_cardiac_dx = Chf_dx + Htn_dx + Angina_dx;

-- QUERY SET #4D: AGGREGATING CARDIAC DX, METHOD 2
DROP TABLE IF EXISTS CARDIAC_DX;
CREATE TABLE CARDIAC_DX(Dx_icd TEXT NOT NULL);
INSERT INTO CARDIAC_DX (Dx_icd) VALUES ('I50.9'),('I10'),('I20.9');

ALTER TABLE MORT_FINAL_2 ADD COLUMN Num_cardiac_dx_v2 INTEGER;
UPDATE MORT_FINAL_2
SET Num_cardiac_dx_v2 = 
(
  SELECT COUNT(*) FROM CARDIAC_DX AS C
  WHERE C.Dx_icd = MORT_FINAL_2.Pri_dx_icd
) + (
  SELECT COUNT(*) FROM CARDIAC_DX AS C
  WHERE C.Dx_icd = MORT_FINAL_2.Sec_dx_icd
);

-- QUERY SET #5: COUNTING MEDS
ALTER TABLE MORT_FINAL_2 ADD COLUMN Num_meds INTEGER;
UPDATE MORT_FINAL_2
SET Num_meds = (
  SELECT COUNT(DISTINCT Rx_name)
  FROM MEDICATIONS AS M
  WHERE M.Pid = MORT_FINAL_2.Pid
);

-- QUERY SET #6: BINNING ABNORMAL GLUCOSE
ALTER TABLE MORT_FINAL_2 ADD COLUMN Abnml_glucose INTEGER;
UPDATE MORT_FINAL_2
SET Abnml_glucose = (
  SELECT COUNT(*)
  FROM LABS AS L
  WHERE L.Pid = MORT_FINAL_2.Pid
    AND L.Lab_date = MORT_FINAL_2.Visit_date
    AND L.Lab_name = 'Glucose'
    AND CAST(L.Lab_value AS DECIMAL(10,2)) >= 200
);

-- QUERY SET #7B: IMPUTING TEMP
UPDATE MORT_FINAL_2
SET Temp_f = (
  SELECT AVG(temp_sub.Temp_f)
  FROM (
    SELECT Temp_f FROM MORT_FINAL_2 WHERE Temp_f IS NOT NULL
  ) AS temp_sub
)
WHERE Temp_f IS NULL;

-- QUERY SET #7C: IMPUTING BNP
ALTER TABLE MORT_FINAL_2 ADD COLUMN Raw_BNP INTEGER;

UPDATE MORT_FINAL_2 AS M
JOIN LABS AS L
  ON M.Pid = L.Pid
  AND M.Visit_date = L.Lab_date
  AND L.Lab_name = 'Natriuretic peptide B'
SET M.Raw_BNP = CAST(L.Lab_value AS SIGNED);

UPDATE MORT_FINAL_2
SET Raw_BNP = FLOOR(RAND() * (300 - 250) + 250)
WHERE Raw_BNP IS NULL;

-- QUERY SET #8: TARGET VARIABLE (MORTALITY)
ALTER TABLE MORT_FINAL_2 ADD COLUMN Mortality INTEGER DEFAULT 0;

UPDATE MORT_FINAL_2
SET Mortality = (
  SELECT COUNT(*)
  FROM MORT AS M
  WHERE M.Pid = MORT_FINAL_2.Pid
    AND DATEDIFF(M.Mortality_date, MORT_FINAL_2.Visit_date) < 180
    AND DATEDIFF(M.Mortality_date, MORT_FINAL_2.Visit_date) >= 0
);